{"version":3,"sources":["assets/images/rfilter.png","assets/images/sfilter.png","assets/images/bg.jpg","root/actions.js","js/Searchbar.js","js/MovieElement.js","js/SearchResult.js","js/NextBtn.js","js/PrevBtn.js","js/SubmitBtn.js","js/NominationList.js","js/ContentContainer.js","js/HistoryList.js","js/MainPage.js","root/root_reducer.js","index.js"],"names":["SEARCH","UPDATERESULT","UPDATENOMINATION","REMOVENOMINATION","CAROUSELNEXT","CAROUSELPREV","UPDATENOMIMGDATA","REQUESTNOMIMGDATA","SearchBar","props","makeRequest","bind","handleChange","this","dispatchMakeRequest","input","event","dispatchHandleChange","target","value","CSSTransition","in","showCarousel","timeout","classNames","className","id","type","placeholder","name","onChange","onClick","comp","React","Component","container","connect","state","carousel_state","dispatch","user_input","url","axios","get","catch","e","console","log","then","res","resJson","data","payload","Handle_Change_Action","selectFilter","require","removeFilter","MovieElement","core_movie_data","Title","movie_info","imdbID","Poster","handle_nomination","dispatchNominate","handle_remove_nomination","dispatchRemoveNomination","SelectableButton","parentPanel","src","alt","default","RemovableButton","InactiveButton","disabled","AppropriateButton","nominations","filter","x","length","title","Nominate","Remove_Nomination","SearchResult","Success_Search_Result","Search","map","hasOwnProperty","Error","result","NextBtn","btnSelector","Button","variant","size","dispatchCarouselNext","active","progress","PrevBtn","dispatchCarouselPrev","SubmitBtn","requestImgJson","JSON","stringify","requestImgGeneration","toString","nomination_img","json","request_json","dispatchDownload","downloadImg","downloadBtn","loadingBtn","awaiting","imgData","imgURL","dl","document","createElement","href","download","body","appendChild","click","removeChild","nomination_img_meta","awaiting_nomination_img","request_param","post","NomImg_Meta","img","bg","NominationList","nominated_element","nomination_data","i","pos","btn_style","padding","position","width","height","left","top","zIndex","txt_style","display","justifyContent","alignItems","btn","style","ContentContainer","Carousel","controls","activeIndex","index","interval","indicators","slide","animate","Item","HistoryList","HistoryDisplay","history","RecentNominations","localStorage","getItem","parse","MainPage","combineReducers","action","checkForExistingID","newState","remove_target_index","findIndex","splice","current_storage_json","new_history","slice","push","setItem","store","createStore","root_reducer","ReactDOM","render","rel","integrity","crossOrigin","getElementById"],"mappings":"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","file":"static/js/main.c45c7566.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rfilter.47b3ff8a.png\";","export default __webpack_public_path__ + \"static/media/sfilter.4779ca1a.png\";","export default __webpack_public_path__ + \"static/media/bg.ca729135.jpg\";","export const SEARCH = 'SEARCH';\r\nexport const SUCESSREQUEST = 'SUCESSREQUEST';\r\nexport const FAILREQUEST = 'FAILREQUEST';\r\nexport const UPDATERESULT = 'UPDATERESULT';\r\nexport const UPDATENOMINATION = 'UPDATENOMINATION';\r\nexport const REMOVENOMINATION = 'REMOVENOMINATION';\r\nexport const UPDATEHISTORY = 'UPDATEHISTORY';\r\nexport const CAROUSELNEXT = 'CAROUSELNEXT';\r\nexport const CAROUSELPREV = 'CAROUSELPREV';\r\nexport const UPDATENOMIMGDATA = 'UPDATENOMIMGDATA';\r\nexport const REQUESTNOMIMGDATA = 'REQUESTNOMIMGDATA';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SEARCH, UPDATERESULT } from '../root/actions';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport axios from 'axios';\r\n\r\n//Keeps track of user input\r\nexport const input = (state = '', action) => {\r\n    switch (action.type) {\r\n        case SEARCH:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Component for the search bar\r\nclass SearchBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.makeRequest = this.makeRequest.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    makeRequest() {\r\n        this.props.dispatchMakeRequest(this.props.input);\r\n    }\r\n    handleChange(event) {\r\n        this.props.dispatchHandleChange(event.target.value);\r\n    }\r\n\r\n    //The search bar component takes up most of the screen at the start, but shrinks itself if the main panels need to be shown. showCarousel will trigger appropriate transitions for shrinking.\r\n    comp() {\r\n        return (\r\n\r\n            <CSSTransition in={this.props.showCarousel} timeout={1000} classNames=\"search-bar\">\r\n                <div className=\"search-bar\">\r\n                    <CSSTransition in={this.props.showCarousel} timeout={1000} classNames=\"search-bar-field\">\r\n                        <div className=\"search-bar-field\">\r\n                            <h2>Search Here!</h2>\r\n                            <div id=\"SearchField\">\r\n                                <input type=\"text\" placeholder=\"Search..\" name=\"search\" onChange={this.handleChange} />\r\n                                <button type=\"submit\" onClick={() => { this.makeRequest(); }}>Search</button>\r\n                            </div>\r\n                        </div>\r\n                    </CSSTransition>\r\n                </div>\r\n            </CSSTransition>\r\n\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            this.comp()\r\n        );\r\n    }\r\n}\r\n\r\nconst Handle_Change_Action = (user_input) => {\r\n    return (\r\n        {\r\n            type: SEARCH,\r\n            payload: user_input\r\n        }\r\n    )\r\n};\r\n\r\nconst Process_Request_Result_Action = (resJson) => {\r\n    return (\r\n        {\r\n            type: UPDATERESULT,\r\n            payload: resJson\r\n        }\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        input: state.input,\r\n        showCarousel: state.carousel_state.showCarousel\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //Using user input, make a request on server to request data from OMDB.\r\n        //When data is returned, store the results in the store.\r\n        dispatchMakeRequest: (user_input) => {\r\n            let url = \"https://cliff-website.rcp.r9n.co/search?i=\" + user_input;\r\n            axios.get(url)\r\n                .catch((e) => console.log(\"Error Get: \" + e))\r\n                .then((res) => {\r\n                    dispatch(Process_Request_Result_Action(res.data));\r\n                }\r\n                )\r\n        },\r\n        //Update user input on the store\r\n        dispatchHandleChange: (user_input) => {\r\n            dispatch(Handle_Change_Action(user_input));\r\n        }\r\n\r\n    }\r\n};\r\nconst container = connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n\r\nexport default container;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { UPDATENOMINATION, REMOVENOMINATION } from \"../root/actions\";\r\n\r\nconst selectFilter = require(\"../assets/images/sfilter.png\");\r\nconst removeFilter = require(\"../assets/images/rfilter.png\");\r\n\r\n//A button component for each movie.\r\nclass MovieElement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handle_nomination = this.handle_nomination.bind(this);\r\n        this.handle_remove_nomination = this.handle_remove_nomination.bind(this);\r\n        this.AppropriateButton = this.AppropriateButton.bind(this);\r\n    }\r\n\r\n    //Relevant info pertaining to the button.\r\n    core_movie_data = {\r\n        Title: this.props.movie_info.Title,\r\n        imdbID: this.props.movie_info.imdbID,\r\n        Poster: this.props.movie_info.Poster\r\n    };\r\n\r\n    handle_nomination = () => {\r\n        this.props.dispatchNominate(this.core_movie_data);\r\n    }\r\n\r\n    handle_remove_nomination = () => {\r\n        this.props.dispatchRemoveNomination(this.core_movie_data);\r\n    }\r\n\r\n    //The button when it can nominate itself.\r\n    SelectableButton = (\r\n        <button className={this.props.parentPanel} onClick={() => { this.handle_nomination() }}>\r\n            <img src={this.props.movie_info.Poster} alt={`Title: ${this.props.movie_info.Title}`} />\r\n            <img className=\"filter filter-hover\" src={selectFilter.default} />\r\n        </button>\r\n    );\r\n\r\n    //The button when the movie is already nominated and can used to remove the movie.\r\n    RemovableButton = (\r\n        <button className={this.props.parentPanel} onClick={() => { this.handle_remove_nomination() }}>\r\n            <img src={this.props.movie_info.Poster} alt={`Title: ${this.props.movie_info.Title}`} />\r\n            <img className=\"filter filter-active\" src={selectFilter.default} />\r\n            <img className=\"filter filter-hover\" src={removeFilter.default} />\r\n        </button>\r\n    );\r\n    \r\n    //The button when the nomination list is capped and no more movies can be nominated.\r\n    InactiveButton = (\r\n        <button className={this.props.parentPanel} disabled>\r\n            <img className=\"greyscale\" src={this.props.movie_info.Poster} alt={`Title: ${this.props.movie_info.Title}`} />\r\n        </button>\r\n    )\r\n\r\n    //Select the appropriate button to display.\r\n    AppropriateButton = () => {\r\n\r\n        if (this.props.nominations.filter(x => x.imdbID == this.props.movie_info.imdbID).length > 0) {\r\n            return this.RemovableButton;\r\n        } else if (this.props.nominations.length >= 5) {\r\n            return this.InactiveButton;\r\n        } else {\r\n            return this.SelectableButton;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //Element shows movie title on hover.\r\n        return (\r\n            <div className=\"MovieElement\">\r\n                <div title={this.props.movie_info.Title}>\r\n                    <this.AppropriateButton />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Nominate = (core_movie_data) => {\r\n    return {\r\n        type: UPDATENOMINATION,\r\n        payload: core_movie_data\r\n    }\r\n}\r\n\r\nconst Remove_Nomination = (core_movie_data) => {\r\n    return {\r\n        type: REMOVENOMINATION,\r\n        payload: core_movie_data\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        nominations: state.nominations\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //Dispatch an action to nominate a movie.\r\n        dispatchNominate: (core_movie_data) => {\r\n            dispatch(Nominate(core_movie_data));\r\n        },\r\n        //Dispatch an action to remove a nomination.\r\n        dispatchRemoveNomination: (core_movie_data) => {\r\n            dispatch(Remove_Nomination(core_movie_data));\r\n        }\r\n    }\r\n}\r\nconst container = connect(mapStateToProps, mapDispatchToProps)(MovieElement);\r\n\r\nexport default container;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { UPDATERESULT } from '../root/actions';\r\nimport MovieElement from './MovieElement';\r\n\r\n//Keeps track of the search result returned from omdb\r\nexport const result = (state = '', action) => {\r\n    switch (action.type) {\r\n        case UPDATERESULT:\r\n            let data = action.payload;\r\n            return data;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Search result component that displays search results\r\nclass SearchResult extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.Success_Search_Result = this.Success_Search_Result.bind(this);\r\n    }\r\n\r\n    //Render each search result as a MovieElement component, a button that can be used for nominating or de-nominating.\r\n    Success_Search_Result = () => {\r\n        return this.props.data.Search.map((e) => {\r\n            return (<MovieElement key={\"search_\" + e.imdbID} parentPanel=\"search-result-btn\" movie_info={e} />)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data != null) {\r\n            if (this.props.data.hasOwnProperty(\"Search\")) {\r\n                return (\r\n                    <div className='search-result'>\r\n                        <div id=\"search-result-elements-container\">\r\n                            <this.Success_Search_Result />\r\n                        </div>\r\n                    </div>);\r\n            } else {\r\n                //If the Search key does not exist, then an error has occured, therefore display the error instead.\r\n                return (\r\n                    <div className='search-result'>\r\n                        <p> {this.props.data.Error} </p>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.result\r\n    }\r\n};\r\n\r\nconst container = connect(mapStateToProps, null)(SearchResult)\r\n\r\nexport default container;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport { CAROUSELNEXT } from '../root/actions'\r\n\r\n//Button to show nomination panel.\r\nclass NextBtn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.btnSelector = this.btnSelector.bind(this);\r\n    }\r\n\r\n    btnSelector = (x) => {\r\n        return (<Button variant=\"primary\" size=\"lg\" onClick={this.props.dispatchCarouselNext} active>{\"(\" + this.props.progress.length + \"/5) Next\"}</Button>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.btnSelector(this.props.progress)\r\n        )\r\n    }\r\n}\r\n\r\nconst Carousel_Next_Action = () => {\r\n    return (\r\n        {\r\n            type: CAROUSELNEXT\r\n        }\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        progress: state.nominations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dispatchCarouselNext: () => { dispatch(Carousel_Next_Action()) }\r\n    }\r\n}\r\n\r\nconst container = connect(mapStateToProps, mapDispatchToProps)(NextBtn);\r\nexport default container;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport { CAROUSELPREV } from '../root/actions'\r\n\r\n//Button to show search result panel.\r\nclass PrevBtn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.btnSelector = this.btnSelector.bind(this);\r\n    }\r\n\r\n    btnSelector = (x) => {\r\n        return (<Button variant=\"primary\" size=\"lg\" onClick={this.props.dispatchCarouselPrev} active>{\"(\" + this.props.progress.length + \"/5) Prev\"}</Button>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.btnSelector(this.props.progress)\r\n        )\r\n    }\r\n}\r\n\r\nconst Carousel_Prev_Action = () => {\r\n    return (\r\n        {\r\n            type: CAROUSELPREV\r\n        }\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        progress: state.nominations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dispatchCarouselPrev: () => { dispatch(Carousel_Prev_Action()) }\r\n    }\r\n}\r\n\r\nconst container = connect(mapStateToProps, mapDispatchToProps)(PrevBtn);\r\nexport default container;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { UPDATENOMIMGDATA, REQUESTNOMIMGDATA } from \"../root/actions\";\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport axios from 'axios';\r\n\r\n//Keeps track of the last nomination result.\r\nexport const nomination_img_meta = (state = { data: \"\", json: \"\" }, action) => {\r\n    switch (action.type) {\r\n        case UPDATENOMIMGDATA:\r\n            return { data: action.payload.img, json: action.payload.event };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Is the site awaiting for backend data to return?\r\nexport const awaiting_nomination_img = (state = false, action) => {\r\n    switch (action.type) {\r\n        case REQUESTNOMIMGDATA:\r\n            return true;\r\n        case UPDATENOMIMGDATA:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Button to send all relevant info to backend for processing.\r\nclass SubmitBtn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.requestImgJson = this.requestImgJson.bind(this);\r\n        this.requestImgGeneration = this.requestImgGeneration.bind(this);\r\n    }\r\n\r\n    //JSON stringify nomination data\r\n    requestImgJson = () => { return JSON.stringify(this.props.nominations) }\r\n\r\n    requestImgGeneration = () => {\r\n        //If nomination data is not cached, then this nomination is new, therefore dispatch to request a download of a new image.\r\n        if (this.props.nominations.toString() != this.props.nomination_img.json.toString()) {\r\n            let request_json = this.requestImgJson();\r\n            this.props.dispatchDownload(request_json);\r\n        //If nomination data is the same as the previous, simply return a cached version of the image.\r\n        } else {\r\n            downloadImg(this.props.nomination_img.data);\r\n        }\r\n\r\n    }\r\n\r\n    //Button when available to download image.\r\n    downloadBtn = <Button onClick={() => { this.requestImgGeneration(); }} variant=\"primary\" size=\"lg\" active>Download</Button>\r\n\r\n    //Button when request to download image is made but awaiting result.\r\n    loadingBtn = <Button className=\"rel transparent-font\" variant=\"primary\" size=\"lg\" disabled>Download<div className=\"lds-dual-ring\" /></Button>\r\n\r\n    //Display the approriate button accordingly.\r\n    render() {\r\n        if (this.props.awaiting) {\r\n             return (this.loadingBtn);\r\n        } else {\r\n            return (this.downloadBtn);\r\n        }\r\n    }\r\n}\r\n\r\nconst Update_NomImg_Data_Action = (NomImg_Meta) => {\r\n    return {\r\n        type: UPDATENOMIMGDATA,\r\n        payload: NomImg_Meta\r\n    }\r\n}\r\n\r\nconst Request_NomImg_Data_Action = () => {\r\n    return {\r\n        type: REQUESTNOMIMGDATA\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        nominations: state.nominations,\r\n        nomination_img: state.nomination_img_meta,\r\n        awaiting: state.awaiting_nomination_img\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //Make request to AWS to process image and return the result.\r\n        dispatchDownload: (request_param) => {\r\n            dispatch(Request_NomImg_Data_Action());\r\n            let postUrl = \"https://nod4m44snb.execute-api.us-east-2.amazonaws.com/production/nominationImage/generate\";\r\n            axios.post(postUrl, { data: request_param })\r\n                .then((res) => {\r\n                    dispatch(Update_NomImg_Data_Action(res.data));\r\n                    return res.data.img;\r\n                }).then((img) => {\r\n                    downloadImg(img);\r\n                }\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\n//The data returned is in base64, download the data in jpeg format.\r\nfunction downloadImg(imgData) {\r\n    let imgURL = \"data:image/jpeg;base64, \";\r\n    imgURL += imgData;\r\n    const dl = document.createElement('a');\r\n    dl.href = imgURL;\r\n    dl.download = 'result.jpeg';\r\n    document.body.appendChild(dl);\r\n    dl.click();\r\n    document.body.removeChild(dl);\r\n}\r\n\r\nconst container = connect(mapStateToProps, mapDispatchToProps)(SubmitBtn);\r\nexport default container;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { UPDATENOMINATION, REMOVENOMINATION } from '../root/actions';\r\n\r\nconst bg = require('../assets/images/bg.jpg');\r\nconst removeFilter = require(\"../assets/images/rfilter.png\");\r\n\r\n//Keeps tracks of the nomrination list.\r\nexport const nominations = (state = [], action) => {\r\n    switch (action.type) {\r\n        //Append any new nominations.\r\n        case UPDATENOMINATION:\r\n            let data = action.payload;\r\n            let checkForExistingID = state.filter(x => x.imdbID == data.imdbID);\r\n\r\n            if (checkForExistingID.length == 0) {\r\n                let newState = [...state, data];\r\n                return newState;\r\n            }\r\n            return state;\r\n        //Remove a nomination.\r\n        case REMOVENOMINATION:\r\n            let remove_target_index = state.findIndex(x => x.imdbID == action.payload.imdbID);\r\n            if (remove_target_index != -1) {\r\n                let newState = [...state];\r\n                newState.splice(remove_target_index, 1);\r\n                return newState;\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Component of the nomination panel.\r\nclass NominationList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handle_remove_nomination = this.handle_remove_nomination.bind(this);\r\n        this.nominated_element = this.nominated_element.bind(this);\r\n    }\r\n\r\n    handle_remove_nomination = (core_movie_data) => {\r\n        this.props.dispatchRemoveNomination(core_movie_data);\r\n    }\r\n\r\n    //Interactive movie elements placed on an image preview.\r\n    //Each element is positioned one after another on a background image.\r\n    nominated_element = (nomination_data, i) => {\r\n        let pos = 13 + i * 17;\r\n        let btn_style = {\r\n            padding: \"0px\",\r\n            position: \"absolute\",\r\n            width: \"21%\",\r\n            height: \"17%\",\r\n            left: \"0px\",\r\n            top: pos + \"%\",\r\n            zIndex: 5\r\n        }\r\n        let txt_style = {\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            width: \"79%\",\r\n            height: \"17%\",\r\n            left: \"21%\",\r\n            top: pos + \"%\"\r\n        }\r\n        //Button to remove the nomination.\r\n        let btn = (\r\n            <button style={btn_style} className=\"nomination-list-btn\" onClick={() => { this.handle_remove_nomination(nomination_data) }}>\r\n                <img src={nomination_data.Poster} alt={nomination_data.Title} />\r\n                <img className=\"filter filter-hover\" src={removeFilter.default}/>\r\n            </button>)\r\n        let title = (\r\n        <div className=\"nomination-list-text\" style={txt_style}><p>{nomination_data.Title}</p></div>\r\n        );\r\n        return (\r\n            <div key={\"nomination_\" + nomination_data.imdbID} className=\"nomination-elements-container\" >\r\n                {btn}\r\n                {title}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='NominationList'>\r\n                <div id=\"preview-container\">\r\n                    {/*A background image for the buttons, creating an interactive image preview.*/}\r\n                    <img id=\"bg\" src={bg.default} />\r\n                    {this.props.nominations.map((e, i) => {\r\n                        return this.nominated_element(e, i)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Remove_Nomination = (core_movie_data) => {\r\n    return {\r\n        type: REMOVENOMINATION,\r\n        payload: core_movie_data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dispatchRemoveNomination: (core_movie_data) => {\r\n            dispatch(Remove_Nomination(core_movie_data));\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        nominations: state.nominations\r\n    }\r\n}\r\n\r\nconst container = connect(mapStateToProps, mapDispatchToProps)(NominationList)\r\n\r\nexport default container;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchResult from \"./SearchResult\";\r\nimport NextBtn from \"./NextBtn\";\r\nimport PrevBtn from \"./PrevBtn\";\r\nimport SubmitBtn from \"./SubmitBtn\";\r\nimport NominataionList from \"./NominationList\";\r\n\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { CAROUSELNEXT, CAROUSELPREV, UPDATERESULT, UPDATENOMINATION } from '../root/actions'\r\n\r\n//Carousel State, sets the index of the carousel that slides between search results and nominations\r\nexport const carousel_state = (state = { index: 0, animate: true, showCarousel: false }, action) => {\r\n    switch (action.type) {\r\n\r\n        case CAROUSELNEXT:\r\n            return { index: 1, animate: true, showCarousel: true };\r\n\r\n        case CAROUSELPREV:\r\n            return { index: 0, animate: true, showCarousel: true };\r\n\r\n        //If showCarousel is false, that indicates the site is at its initial state and a recent nomination is nominated.\r\n        //Accordingly, when the panels are displayed, the nomination panel should show up instead of the search result panel.\r\n        case UPDATENOMINATION:\r\n            if (!state.showCarousel) {\r\n                return { index: 1, animate: true, showCarousel: true };\r\n            } else {\r\n                return state;\r\n            }\r\n\r\n        //Regardless what state or panel the site is currently at, transition the carousel to show the search result panel.\r\n        case UPDATERESULT:\r\n            return { index: 0, animate: true, showCarousel: true };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Container for the main panel/carousel that contains the search result panel and nomination panel\r\nclass ContentContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CSSTransition in={this.props.showCarousel} timeout={1000} classNames=\"main-content\">\r\n                <div className='main-content'>\r\n                    <Carousel controls={false} activeIndex={this.props.index} interval={null} indicators={false} slide={this.props.animate} >\r\n                        <Carousel.Item>\r\n                            <div id=\"search-result-container\">\r\n                                <div className='page-header'>\r\n                                    <h2>Search Results</h2>\r\n                                    <NextBtn />\r\n                                </div>\r\n                                <SearchResult />\r\n                            </div>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <div id=\"nomination-list-container\">\r\n                                <div className='page-header'>\r\n                                    <h2>Your Nominations</h2>\r\n                                    <div>\r\n                                        <PrevBtn />\r\n                                        <SubmitBtn />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <NominataionList />\r\n                            </div>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </div>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        index: state.carousel_state.index,\r\n        animate: state.carousel_state.animate,\r\n        showCarousel: state.carousel_state.showCarousel\r\n    }\r\n}\r\n\r\nconst container = connect(mapStateToProps, null)(ContentContainer);\r\nexport default container;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { UPDATENOMINATION } from \"../root/actions\";\r\nimport MovieElement from \"./MovieElement\";\r\n\r\n//Keeps track of the user's nomination history.\r\nexport const history = (state = [], action) => {\r\n    switch (action.type) {\r\n        //Append new nominations to an existing history of nominations stored on local storage.\r\n        case UPDATENOMINATION:\r\n            let current_storage_json = localStorage.getItem(\"recent_nominations\");\r\n            let new_history = [...state];\r\n            let data = action.payload;\r\n            if (current_storage_json != null) {\r\n                new_history = JSON.parse(current_storage_json);\r\n            }\r\n\r\n            //If local storage has a history greater than 5 entries, remove oldest ones till there is only 5.\r\n            if (new_history.length > 5) {\r\n                let length = new_history.length;\r\n                new_history = new_history.slice(length - 5, length - 1);\r\n            }\r\n\r\n            //Ensure only new entries are added to the history.\r\n            let checkForExistingID = new_history.filter(x => x.imdbID == data.imdbID);\r\n            if (checkForExistingID.length == 0) {\r\n                //Remove oldest entry if this is the 6th entry.\r\n                if (new_history.length == 5) {\r\n                    new_history = new_history.slice(1,5);                    \r\n                }\r\n                new_history.push(data);\r\n                localStorage.setItem(\"recent_nominations\", JSON.stringify(new_history));\r\n            }           \r\n            \r\n            return new_history;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Component for recent nominations.\r\nclass HistoryList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.HistoryDisplay = this.HistoryDisplay.bind(this);\r\n    }\r\n\r\n\r\n    HistoryDisplay = () => {\r\n        //If the store has already received a history list, display MovieElements for each entry in the history.\r\n        if (this.props.history.length > 0) {\r\n            return this.props.history.map((e) => {\r\n                return (<li key={e.imdbID}><MovieElement parentPanel=\"history-list-btn\" movie_info={e} /></li>)\r\n            });\r\n        //Else, the site has just been loaded and the store has yet to retrieve any history data, attempt to create it with local storage if possible.\r\n        } else {\r\n            let RecentNominations = localStorage.getItem(\"recent_nominations\");\r\n            if (RecentNominations != null) {\r\n                let parseStorage = JSON.parse(RecentNominations);\r\n                return parseStorage.map((e) => {\r\n                    return (<li key={e.imdbID}><MovieElement parentPanel=\"history-list-btn\" movie_info={e} /></li>)\r\n                });\r\n            }\r\n            return <br />;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"HistoryList\">\r\n                <div>\r\n                    <h3>Recent Nominations</h3>\r\n                    <ul>\r\n                        <this.HistoryDisplay />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        history: state.history\r\n    }\r\n}\r\n\r\nconst container = connect(mapStateToProps, null)(HistoryList);\r\n\r\nexport default container;","import React from 'react';\r\n\r\nimport SearchBar from './Searchbar';\r\nimport ContentContainer from './ContentContainer';\r\nimport HistoryList from './HistoryList';\r\n\r\n//Container for all components\r\nexport default class MainPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"main\">\r\n                <SearchBar />\r\n                <ContentContainer />\r\n                <HistoryList />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { input } from '../js/Searchbar';\r\nimport { result } from '../js/SearchResult';\r\nimport { nominations } from '../js/NominationList';\r\nimport { history } from '../js/HistoryList';\r\nimport { carousel_state } from '../js/ContentContainer';\r\nimport { nomination_img_meta, awaiting_nomination_img } from '../js/SubmitBtn';\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n    input,\r\n    result,\r\n    nominations,\r\n    history,\r\n    carousel_state,\r\n    nomination_img_meta,\r\n    awaiting_nomination_img\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport MainPage from './js/MainPage';\n\nimport { createStore } from \"redux\";\nimport root_reducer from './root/root_reducer'\nimport { Provider } from 'react-redux';\n\nimport './css/index.css';\nimport './css/search-bar.css';\nimport './css/search-result.css';\nimport './css/MovieElement.css';\nimport './css/main-content.css';\nimport './css/history-list.css';\nimport './css/filter.css';\nimport './css/loading.css';\n\nconst store = createStore(root_reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* bootstrap stylesheet */}\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n      crossOrigin=\"anonymous\"\n    />\n    <MainPage />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}